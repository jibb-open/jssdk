"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.deleteImage=deleteImage,exports.deleteRecording=deleteRecording,exports.getAllRecordImages=getAllRecordImages,exports.getImage=getImage,exports.getImageList=getImageList,exports.getRecording=getRecording,exports.getRecordingList=getRecordingList,exports.startRecording=startRecording,exports.stopRecording=stopRecording,exports.takeSnapshot=takeSnapshot,exports.updateRecording=updateRecording,require("core-js/modules/es.promise.js"),require("core-js/modules/es.json.stringify.js"),require("core-js/modules/web.dom-collections.iterator.js");var _config=require("../config.js"),_auth=require("./auth.js"),_index=require("../utils/http/index.js");async function updateRecording(a){let{recordingId:b,title:c}=a,d={"Content-Type":"application/json",Accept:"application/json","x-jibb-user-jwt":await _auth.Auth.getUserToken()};return _index.http.post("".concat(_config.Config.apiBaseURL,"/v1/meetings/recordings/").concat(b),{title:c},d)}async function getRecording(a){let b={"Content-Type":"application/json",Accept:"application/json","x-jibb-user-jwt":await _auth.Auth.getUserToken()},c=await _index.http.get("".concat(_config.Config.apiBaseURL,"/v1/meetings/recordings/").concat(a),b);return c.data}async function getRecordingList(a){let b={"Content-Type":"application/json",Accept:"application/json","x-jibb-user-jwt":await _auth.Auth.getUserToken()};void 0!==a&&(b["x-jibb-pagination"]=JSON.stringify(a));let c=await _index.http.get("".concat(_config.Config.apiBaseURL,"/v1/meetings/recordings"),b);return a=c.headers["x-jibb-pagination"],a=a&&JSON.parse(a),{items:c.data.items,pagination:a}}async function deleteRecording(a){let b={"Content-Type":"application/json",Accept:"application/json","x-jibb-user-jwt":await _auth.Auth.getUserToken()};return _index.http.delete("".concat(_config.Config.apiBaseURL,"/v1/meetings/recordings/").concat(a),b)}async function getImageList(a){let b={"Content-Type":"application/json",Accept:"application/json","x-jibb-user-jwt":await _auth.Auth.getUserToken()},c=await _index.http.get("".concat(_config.Config.apiBaseURL,"/v1/meetings/recordings/").concat(a,"/images"),b);return c.data.imageName}async function getImage(a){let{recordingId:b,imageName:c}=a,d={"Content-Type":"application/json",Accept:"image/jpeg","x-jibb-user-jwt":await _auth.Auth.getUserToken()},e="".concat(_config.Config.apiBaseURL,"/v1/meetings/recordings/").concat(b,"/images/").concat(c),f=await _index.http.get(e,d,{responseType:"arraybuffer"});return f.data}async function getAllRecordImages(a){let b=[],c=await this.getImageList(a);for(const d of c){let c={"Content-Type":"application/json",Accept:"application/json","x-jibb-user-jwt":await _auth.Auth.getUserToken()},e=await _index.http.get("".concat(_config.Config.apiBaseURL,"/v1/meetings/recordings/").concat(a,"/images/").concat(d),{headers:c});b.push({imageName:d,data:e.data})}return b}async function deleteImage(a){let{recordingId:b,imageName:c}=a,d={"Content-Type":"application/json",Accept:"application/json","x-jibb-user-jwt":await _auth.Auth.getUserToken()};return _index.http.delete("".concat(_config.Config.apiBaseURL,"/v1/meetings/recordings/").concat(b,"/images/").concat(c),d)}async function startRecording(){let a=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{meetingId,meetingToken,title:"UNTITLED",interval:60};return async function(){let b=null===a||void 0===a?void 0:a.meetingToken,c=(null===a||void 0===a?void 0:a.title)||"UNTITLED",d=(null===a||void 0===a?void 0:a.interval)||60,e=null===a||void 0===a?void 0:a.meetingId,f={"Content-Type":"application/json",Accept:"application/json","x-jibb-user-jwt":await _auth.Auth.getUserToken(),"x-jibb-meeting-jwt":b},g=await _index.http.post("".concat(_config.Config.apiBaseURL,"/v1/meetings/recordings/start"),{title:c,write_interval:d,meeting_id:e},f);return g.data}()}async function stopRecording(){let a={"Content-Type":"application/json",Accept:"application/json","x-jibb-user-jwt":await _auth.Auth.getUserToken()},b=await _index.http.post("".concat(_config.Config.apiBaseURL,"/v1/meetings/recordings/stop"),{},a);return b.data}async function takeSnapshot(){let a={"Content-Type":"application/json",Accept:"application/json","x-jibb-user-jwt":await _auth.Auth.getUserToken()},b=await _index.http.post("".concat(_config.Config.apiBaseURL,"/v1/meetings/recordings/snapshot"),{},a);return b.data}