"use strict";var _jwtDecode=_interopRequireDefault(require("jwt-decode"));Object.defineProperty(exports,"__esModule",{value:!0}),exports.UserType=exports.UserClaims=exports.SkuAction=exports.RenewalTerm=exports.MeetingTypes=exports.MeetingClaims=exports.JibbUser=exports.JibbStarterPack=exports.JibbRoom=exports.JibbPlans=exports.JibbPilot=exports.Action=exports.AccessLevel=void 0,require("core-js/modules/web.dom-collections.iterator.js"),require("core-js/modules/es.weak-map.js");function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function _classPrivateMethodInitSpec(a,b){_checkPrivateRedeclaration(a,b),b.add(a)}function _classPrivateFieldInitSpec(a,b,c){_checkPrivateRedeclaration(a,b),b.set(a,c)}function _checkPrivateRedeclaration(a,b){if(b.has(a))throw new TypeError("Cannot initialize the same private elements twice on an object")}function _classPrivateFieldGet(a,b){var c=_classExtractFieldDescriptor(a,b,"get");return _classApplyDescriptorGet(a,c)}function _classApplyDescriptorGet(a,b){return b.get?b.get.call(a):b.value}function _classPrivateMethodGet(a,b,c){if(!b.has(a))throw new TypeError("attempted to get private field on non-instance");return c}function _classPrivateFieldSet(a,b,c){var d=_classExtractFieldDescriptor(a,b,"set");return _classApplyDescriptorSet(a,d,c),c}function _classExtractFieldDescriptor(a,b,c){if(!b.has(a))throw new TypeError("attempted to "+c+" private field on non-instance");return b.get(a)}function _classApplyDescriptorSet(a,b,c){if(b.set)b.set.call(a,c);else{if(!b.writable)throw new TypeError("attempted to set read only private field");b.value=c}}const MeetingTypes={DEFAULT:0,WHITEBOARD:1};exports.MeetingTypes=MeetingTypes;const AccessLevel={USER:"USER",ADMIN:"ADMIN",SUPERADMIN:"SUPERADMIN"};exports.AccessLevel=AccessLevel;const UserType={UNKNOWN:0,MEMBER:2,ADMIN:3,OWNER:4};exports.UserType=UserType;const Action={NEW:"NEW",CANCEL:"CANCEL",CHANGE:"CHANGE"};exports.Action=Action;const RenewalTerm={MANUAL:"0",AUTO:"12"};exports.RenewalTerm=RenewalTerm;const SkuAction={ADD:"0",MODIFIED:"1",DELETE:"2",NO_CHANGE:"3"};exports.SkuAction=SkuAction;var _billingFrequencies=/*#__PURE__*/new WeakMap,_name=/*#__PURE__*/new WeakMap,_createBillingFrequencies=/*#__PURE__*/new WeakSet;class JibbPlan{constructor(a,b){_classPrivateMethodInitSpec(this,_createBillingFrequencies),_classPrivateFieldInitSpec(this,_billingFrequencies,{writable:!0,value:void 0}),_classPrivateFieldInitSpec(this,_name,{writable:!0,value:void 0}),_classPrivateFieldSet(this,_name,a),_classPrivateFieldSet(this,_billingFrequencies,new Map),0<b&&_classPrivateMethodGet(this,_createBillingFrequencies,_createBillingFrequencies2).call(this,b)}getPlanName(){return _classPrivateFieldGet(this,_name)}getBillingFrequencies(){return _classPrivateFieldGet(this,_billingFrequencies)}}function _createBillingFrequencies2(a){for(let b,c=0;c<a;c++)b="Every ".concat(c+12," Months"),_classPrivateFieldGet(this,_billingFrequencies).set(b,"".concat(12+c))}class JibbPilot extends JibbPlan{constructor(){super("JIBB-Pilot",0),super.getBillingFrequencies().set("Every 3 Months","3")}}exports.JibbPilot=JibbPilot;class JibbRoom extends JibbPlan{constructor(){super("JIBB-Room",60)}}exports.JibbRoom=JibbRoom;class JibbUser extends JibbPlan{constructor(){super("JIBB-User",60)}}exports.JibbUser=JibbUser;class JibbStarterPack extends JibbPlan{constructor(){super("JIBB-Starter-Pack",60)}}exports.JibbStarterPack=JibbStarterPack;class JibbPlans{constructor(){this.starterPack=new JibbStarterPack,this.jibbRoom=new JibbRoom,this.jibbUser=new JibbUser,this.jibbPilot=new JibbPilot}getAllPlan(){let a=[this.starterPack,this.jibbRoom,this.jibbUser,this.jibbPilot];return a}getAllPlanNames(){let a=[this.starterPack.getPlanName(),this.jibbRoom.getPlanName(),this.jibbUser.getPlanName(),this.jibbPilot.getPlanName()];return a}getPlan(a){return a===this.starterPack.getPlanName()?this.starterPack:a===this.jibbRoom.getPlanName()?this.jibbRoom:a===this.jibbUser.getPlanName()?this.jibbUser:a===this.jibbPilot.getPlanName()?this.jibbPilot:void 0}}exports.JibbPlans=JibbPlans;class StandardClaims{constructor(a){this.token=a,this.claims=(0,_jwtDecode.default)(a),this.expiryTime=new Date(1e3*this.claims.exp)}getSecondsUntilExpiry(){let a=this.expiryTime-Date.now();return 0>a?0:a}getHoursUntilExpiry(){let a=this.getSecondsUntilExpiry();return Math.floor(a/3600)}isExpired(){return 60>=this.getSecondsUntilExpiry()}}class MeetingClaims extends StandardClaims{constructor(a){super(a),this.ownerId=this.claims.data.owner_id,this.meetindId=this.claims.data.meeting_id,this.title=this.claims.data.title,this.capacity=this.claims.data.capacity,this.permission=this.claims.data.permission,this.isTemporary=this.claims.data.is_temporary}}exports.MeetingClaims=MeetingClaims;class UserClaims extends StandardClaims{constructor(a){var b,c,d;super(a),this.email=null===(b=this.claims.data)||void 0===b?void 0:b.email,this.userId=this.claims.sub,this.organizationId=null===(c=this.claims.data)||void 0===c?void 0:c.organization_id,this.organizationName=null===(d=this.claims.data)||void 0===d?void 0:d.organization_name}getUserId(){return this.userId}}exports.UserClaims=UserClaims;