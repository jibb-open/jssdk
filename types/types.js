"use strict";var _jwtDecode=_interopRequireDefault(require("jwt-decode"));Object.defineProperty(exports,"__esModule",{value:!0}),exports.UserType=exports.UserClaims=exports.SkuAction=exports.RenewalTerm=exports.MeetingTypes=exports.MeetingClaims=exports.JibbUser=exports.JibbStarterPack=exports.JibbRoom=exports.JibbPilot=exports.Action=exports.AccessLevel=void 0,require("core-js/modules/web.dom-collections.iterator.js");function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function _classPrivateMethodInitSpec(a,b){_checkPrivateRedeclaration(a,b),b.add(a)}function _checkPrivateRedeclaration(a,b){if(b.has(a))throw new TypeError("Cannot initialize the same private elements twice on an object")}function _classPrivateMethodGet(a,b,c){if(!b.has(a))throw new TypeError("attempted to get private field on non-instance");return c}const MeetingTypes={DEFAULT:0,WHITEBOARD:1};exports.MeetingTypes=MeetingTypes;const AccessLevel={USER:"USER",ADMIN:"ADMIN",SUPERADMIN:"SUPERADMIN"};exports.AccessLevel=AccessLevel;const UserType={UNKNOWN:0,MEMBER:2,ADMIN:3,OWNER:4};exports.UserType=UserType;const Action={NEW:"NEW",CANCEL:"CANCEL",CHANGE:"CHANGE"};exports.Action=Action;const RenewalTerm={MANUAL:"0",AUTO:"12"};exports.RenewalTerm=RenewalTerm;const SkuAction={ADD:"0",MODIFIED:"1",DELETE:"2",NO_CHANGE:"3"};exports.SkuAction=SkuAction;class JibbPilot{constructor(){this.name="JIBB-Pilot",this.billingFrequencies=new Map,this.billingFrequencies.set("Every 3 Months","3")}getPlanName(){return this.name}getBillingFrequencies(){return this.billingFrequencies}}exports.JibbPilot=JibbPilot;var _createBillingFrequencies=/*#__PURE__*/new WeakSet;class JibbRoom{constructor(){_classPrivateMethodInitSpec(this,_createBillingFrequencies),this.name="JIBB-Room",this.billingFrequencies=new Map,_classPrivateMethodGet(this,_createBillingFrequencies,_createBillingFrequencies2).call(this,60)}getPlanName(){return this.name}getBillingFrequencies(){return this.billingFrequencies}}exports.JibbRoom=JibbRoom;function _createBillingFrequencies2(a){for(let b,c=0;c<a;c++)b="Every ".concat(c+12," Months"),this.billingFrequencies.set(b,"".concat(12+c))}var _createBillingFrequencies3=/*#__PURE__*/new WeakSet;class JibbUser{constructor(){_classPrivateMethodInitSpec(this,_createBillingFrequencies3),this.name="JIBB-User",this.billingFrequencies=new Map,_classPrivateMethodGet(this,_createBillingFrequencies3,_createBillingFrequencies4).call(this,60)}getPlanName(){return this.name}getBillingFrequencies(){return this.billingFrequencies}}exports.JibbUser=JibbUser;function _createBillingFrequencies4(a){for(let b,c=0;c<a;c++)b="Every ".concat(c+12," Months"),this.billingFrequencies.set(b,"".concat(12+c))}var _createBillingFrequencies5=/*#__PURE__*/new WeakSet;class JibbStarterPack{constructor(){_classPrivateMethodInitSpec(this,_createBillingFrequencies5),this.name="JIBB-Starter-Pack",this.billingFrequencies=new Map,_classPrivateMethodGet(this,_createBillingFrequencies5,_createBillingFrequencies6).call(this,60)}getPlanName(){return this.name}getBillingFrequencies(){return this.billingFrequencies}}exports.JibbStarterPack=JibbStarterPack;function _createBillingFrequencies6(a){for(let b,c=0;c<a;c++)b="Every ".concat(c+12," Months"),this.billingFrequencies.set(b,"".concat(12+c))}class StandardClaims{constructor(a){this.token=a,this.claims=(0,_jwtDecode.default)(a),this.expiryTime=new Date(1e3*this.claims.exp)}getSecondsUntilExpiry(){let a=this.expiryTime-Date.now();return 0>a?0:a}getHoursUntilExpiry(){let a=this.getSecondsUntilExpiry();return Math.floor(a/3600)}isExpired(){return 60>=this.getSecondsUntilExpiry()}}class MeetingClaims extends StandardClaims{constructor(a){super(a),this.ownerId=this.claims.data.owner_id,this.meetindId=this.claims.data.meeting_id,this.title=this.claims.data.title,this.capacity=this.claims.data.capacity,this.permission=this.claims.data.permission,this.isTemporary=this.claims.data.is_temporary}}exports.MeetingClaims=MeetingClaims;class UserClaims extends StandardClaims{constructor(a){var b,c,d;super(a),this.email=null===(b=this.claims.data)||void 0===b?void 0:b.email,this.userId=this.claims.sub,this.organizationId=null===(c=this.claims.data)||void 0===c?void 0:c.organization_id,this.organizationName=null===(d=this.claims.data)||void 0===d?void 0:d.organization_name}getUserId(){return this.userId}}exports.UserClaims=UserClaims;